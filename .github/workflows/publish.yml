name: Publish

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up runner image
        run: |
          df -h
          rm -rf /opt/hostedtoolcache
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest
      - uses: taiki-e/install-action@just
      - run: just test
      - run: just lint

  publish:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: crates-io
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Publish to crates.io (dry-run)
        run: cargo publish --workspace --dry-run
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --workspace

  # Create GitHub release
  create-release:
      needs: test
      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: read
      if: github.event.inputs.dry_run != 'true'
      steps:
        - name: Checkout code
          uses: actions/checkout@v5
  
        - name: Create GitHub Releases based on changelog
          uses: taiki-e/create-gh-release-action@v1.9.1
          with:
            changelog: CHANGELOG.md
            token: ${{ secrets.GITHUB_TOKEN }}
